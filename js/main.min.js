let burger = () => {
	const e = document.querySelector('.menu'),
		t = document.querySelector('.header__burger')
	t.addEventListener('click', function () {
		e.classList.toggle('active'),
			t.classList.toggle('active'),
			e.classList.contains('active')
				? (e.style.maxWidth = '100%')
				: (e.style.maxWidth = '0')
	}),
		window.addEventListener('resize', function () {
			document.querySelector('body').scrollWidth >= 990
				? (e.style.maxWidth = '100%')
				: (e.style.maxWidth = '0')
		})
}
burger()
let select = function () {
	let e = document.querySelectorAll('.select-form__header'),
		t = document.querySelectorAll('.select-form__list-item'),
		l = document.querySelectorAll('.select-form__wrapper')
	function s() {
		let e = this.nextElementSibling,
			t = this.parentElement
		if (t.classList.contains('is-active'))
			t.classList.remove('is-active'), (e.style.maxHeight = null)
		else {
			l.forEach(e => {
				e.classList.remove('is-active')
				const t = e.querySelector('.select-form__list')
				t && (t.style.maxHeight = null)
			}),
				t.classList.add('is-active')
			let s = e.scrollHeight
			;(e.style.maxHeight = s + 'px'), (e.scrollTop = 0)
		}
	}
	function c() {
		let e = this.innerText,
			t = this.closest('.select-form__wrapper')
		;(t.querySelector('.select-form__current').innerText = e),
			t.classList.remove('is-active'),
			(this.parentElement.style.maxHeight = null)
	}
	e.forEach(e => {
		e.addEventListener('click', s)
	}),
		t.forEach(e => {
			e.addEventListener('click', c)
		})
}
select()


var container = document.querySelector('.container');  
  var scrollable = document.querySelector('.scrollable');  
  var isDragging = false;  
  var startPosition = 0;  
  var currentTranslate = 0;  
  var prevTranslate = 0;  
  var maxTranslate = 0;  
  var minTranslate = 0;  

  scrollable.style.transform = 'translateX(' + currentTranslate + 'px)';  

  function startDrag(e) {  
      isDragging = true;  
      startPosition = e.clientX;  
      scrollable.style.cursor = 'grabbing';  
  }  

  function drag(e) {  
      if (isDragging) {  
          var currentPosition = e.clientX;  
          var distance = currentPosition - startPosition;  
          currentTranslate = prevTranslate + distance;  
          scrollable.style.transform = 'translateX(' + clamp(currentTranslate, minTranslate, maxTranslate) + 'px)';  
      }  
  }  

  function endDrag() {  
      isDragging = false;  
      prevTranslate = currentTranslate;  
      scrollable.style.cursor = 'grab';  
  }  

  function clamp(value, min, max) {  
      return Math.max(min, Math.min(max, value));  
  }  

  container.addEventListener('mouseleave', function() {  
      isDragging = false;  
      scrollable.style.cursor = 'grab';  
  });  

  window.addEventListener('resize', function() {  
      maxTranslate = 0;  
      minTranslate = container.clientWidth - scrollable.scrollWidth;  
  });  

  window.addEventListener('load', function() {  
      maxTranslate = 0;  
      minTranslate = container.clientWidth - scrollable.scrollWidth;  
  });  

  function startDrag(e) {   
	isDragging = true;
	if (e.type === 'touchstart') {
		startPosition = e.touches[0].clientX;
	} else {
		startPosition = e.clientX;
	}
	scrollable.style.cursor = 'grabbing';   
}   

function drag(e) {   
	if (isDragging) {   
		var currentPosition;
		if (e.type === 'touchmove') {
			currentPosition = e.touches[0].clientX;
		} else {
			currentPosition = e.clientX;
		}
		var distance = currentPosition - startPosition;   
		currentTranslate = prevTranslate + distance;   
		scrollable.style.transform = 'translateX(' + clamp(currentTranslate, minTranslate, maxTranslate) + 'px)';   
	}   
} 

container.addEventListener('touchstart', startDrag);
container.addEventListener('touchmove', drag);
container.addEventListener('touchend', endDrag);
